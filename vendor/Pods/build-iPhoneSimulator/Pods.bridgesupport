<?xml version='1.0'?>
<signatures version='1.0'>
<constant const='true' declared_type='NSString*' name='AFNetworkingOperationDidFinishNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingOperationDidStartNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingOperationFailingURLRequestErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingOperationFailingURLResponseDataErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingOperationFailingURLResponseErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingReachabilityDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingReachabilityNotificationStatusItem' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidCompleteAssetPathKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidCompleteErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidCompleteNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidCompleteResponseDataKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidCompleteResponseSerializerKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidCompleteSerializedResponseKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidFinishAssetPathKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidFinishErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidFinishNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidFinishResponseDataKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidFinishResponseSerializerKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidFinishSerializedResponseKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidResumeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidStartNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidSuspendNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFURLRequestSerializationErrorDomain' type='@'/>
<constant const='true' declared_type='NSString*' name='AFURLResponseSerializationErrorDomain' type='@'/>
<constant const='true' declared_type='NSString*' name='AFURLSessionDidInvalidateNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFURLSessionDownloadTaskDidFailToMoveFileNotification' type='@'/>
<constant const='true' declared_type='NSTimeInterval' name='kAFUploadStream3GSuggestedDelay' type='d'/>
<constant const='true' declared_type='NSUInteger' name='kAFUploadStream3GSuggestedPacketSize' type='I' type64='Q'/>
<enum name='AFHTTPRequestQueryStringDefaultStyle' value='0'/>
<enum name='AFNetworkReachabilityStatusNotReachable' value='0'/>
<enum name='AFNetworkReachabilityStatusReachableViaWWAN' value='1'/>
<enum name='AFNetworkReachabilityStatusReachableViaWiFi' value='2'/>
<enum name='AFNetworkReachabilityStatusUnknown' value='-1'/>
<enum name='AFSSLPinningModeCertificate' value='2'/>
<enum name='AFSSLPinningModeNone' value='0'/>
<enum name='AFSSLPinningModePublicKey' value='1'/>
<function name='AFStringFromNetworkReachabilityStatus'>
<arg declared_type='AFNetworkReachabilityStatus' name='status' type='i' type64='q'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function_alias name='FMDBReturnAutoreleased' original='CFAutorelease'/>
<class name='AFCompoundResponseSerializer'>
<method class_method='true' selector='compoundSerializerWithResponseSerializers:'>
<arg declared_type='NSArray*' index='0' name='responseSerializers' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseSerializers'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='AFHTTPRequestOperation'>
<method selector='response'>
<retval declared_type='NSHTTPURLResponse*' type='@'/>
</method>
<method selector='responseObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseSerializer'>
<retval declared_type='AFHTTPResponseSerializer*' type='@'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='0' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='1' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseSerializer:'>
<arg declared_type='AFHTTPResponseSerializer*' index='0' name='responseSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFHTTPRequestOperationManager'>
<method selector='DELETE:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='GET:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='HEAD:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='HTTPRequestOperationWithRequest:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='1' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='2' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='PATCH:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='POST:parameters:constructingBodyWithBlock:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='2' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='3' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='4' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='POST:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='PUT:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='completionGroup'>
<retval declared_type='dispatch_group_t' type='@'/>
</method>
<method selector='completionQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='credential'>
<retval declared_type='NSURLCredential*' type='@'/>
</method>
<method selector='initWithBaseURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='manager'>
<retval declared_type='id' type='@'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='reachabilityManager'>
<retval declared_type='AFNetworkReachabilityManager*' type='@'/>
</method>
<method selector='requestSerializer'>
<retval declared_type='AFHTTPRequestSerializer*' type='@'/>
</method>
<method selector='responseSerializer'>
<retval declared_type='AFHTTPResponseSerializer*' type='@'/>
</method>
<method selector='securityPolicy'>
<retval declared_type='AFSecurityPolicy*' type='@'/>
</method>
<method selector='setCompletionGroup:'>
<arg declared_type='dispatch_group_t' index='0' name='completionGroup' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionQueue:'>
<arg declared_type='dispatch_queue_t' index='0' name='completionQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCredential:'>
<arg declared_type='NSURLCredential*' index='0' name='credential' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOperationQueue:'>
<arg declared_type='NSOperationQueue*' index='0' name='operationQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReachabilityManager:'>
<arg declared_type='AFNetworkReachabilityManager*' index='0' name='reachabilityManager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestSerializer:'>
<arg declared_type='AFHTTPRequestSerializer*' index='0' name='requestSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseSerializer:'>
<arg declared_type='AFHTTPResponseSerializer*' index='0' name='responseSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSecurityPolicy:'>
<arg declared_type='AFSecurityPolicy*' index='0' name='securityPolicy' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldUseCredentialStorage:'>
<arg declared_type='BOOL' index='0' name='shouldUseCredentialStorage' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldUseCredentialStorage'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='AFHTTPRequestSerializer'>
<method selector='HTTPMethodsEncodingParametersInURI'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='HTTPRequestHeaders'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='HTTPShouldHandleCookies'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='HTTPShouldUsePipelining'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsCellularAccess'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cachePolicy'>
<retval declared_type='NSURLRequestCachePolicy' type='I' type64='Q'/>
</method>
<method selector='clearAuthorizationHeader'>
<retval declared_type='void' type='v'/>
</method>
<method selector='multipartFormRequestWithMethod:URLString:parameters:constructingBodyWithBlock:'>
<arg declared_type='NSString*' index='0' name='method' type='@'/>
<arg declared_type='NSString*' index='1' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='parameters' type='@'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='3' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='multipartFormRequestWithMethod:URLString:parameters:constructingBodyWithBlock:error:'>
<arg declared_type='NSString*' index='0' name='method' type='@'/>
<arg declared_type='NSString*' index='1' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='parameters' type='@'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='3' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSError**' index='4' name='error' type='^@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='networkServiceType'>
<retval declared_type='NSURLRequestNetworkServiceType' type='I' type64='Q'/>
</method>
<method selector='requestWithMethod:URLString:parameters:'>
<arg declared_type='NSString*' index='0' name='method' type='@'/>
<arg declared_type='NSString*' index='1' name='URLString' type='@'/>
<arg declared_type='id' index='2' name='parameters' type='@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='requestWithMethod:URLString:parameters:error:'>
<arg declared_type='NSString*' index='0' name='method' type='@'/>
<arg declared_type='NSString*' index='1' name='URLString' type='@'/>
<arg declared_type='id' index='2' name='parameters' type='@'/>
<arg declared_type='NSError**' index='3' name='error' type='^@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='requestWithMultipartFormRequest:writingStreamContentsToFile:completionHandler:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSURL*' index='1' name='fileURL' type='@'/>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='2' name='handler' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method class_method='true' selector='serializer'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAllowsCellularAccess:'>
<arg declared_type='BOOL' index='0' name='allowsCellularAccess' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationHeaderFieldWithToken:'>
<arg declared_type='NSString*' index='0' name='token' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationHeaderFieldWithUsername:password:'>
<arg declared_type='NSString*' index='0' name='username' type='@'/>
<arg declared_type='NSString*' index='1' name='password' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCachePolicy:'>
<arg declared_type='NSURLRequestCachePolicy' index='0' name='cachePolicy' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPMethodsEncodingParametersInURI:'>
<arg declared_type='NSSet*' index='0' name='HTTPMethodsEncodingParametersInURI' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPShouldHandleCookies:'>
<arg declared_type='BOOL' index='0' name='HTTPShouldHandleCookies' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPShouldUsePipelining:'>
<arg declared_type='BOOL' index='0' name='HTTPShouldUsePipelining' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNetworkServiceType:'>
<arg declared_type='NSURLRequestNetworkServiceType' index='0' name='networkServiceType' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQueryStringSerializationWithBlock:'>
<arg declared_type='NSString *(^)(NSURLRequest *, NSDictionary *, NSError **)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSDictionary*' type='@'/>
<arg declared_type='NSError**' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQueryStringSerializationWithStyle:'>
<arg declared_type='AFHTTPRequestQueryStringSerializationStyle' index='0' name='style' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringEncoding:'>
<arg declared_type='NSStringEncoding' index='0' name='stringEncoding' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeoutInterval:'>
<arg declared_type='NSTimeInterval' index='0' name='timeoutInterval' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forHTTPHeaderField:'>
<arg declared_type='NSString*' index='0' name='value' type='@'/>
<arg declared_type='NSString*' index='1' name='field' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
<method selector='timeoutInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='valueForHTTPHeaderField:'>
<arg declared_type='NSString*' index='0' name='field' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='AFHTTPResponseSerializer'>
<method selector='acceptableContentTypes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='acceptableStatusCodes'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method class_method='true' selector='serializer'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAcceptableContentTypes:'>
<arg declared_type='NSSet*' index='0' name='acceptableContentTypes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAcceptableStatusCodes:'>
<arg declared_type='NSIndexSet*' index='0' name='acceptableStatusCodes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringEncoding:'>
<arg declared_type='NSStringEncoding' index='0' name='stringEncoding' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
<method selector='validateResponse:data:error:'>
<arg declared_type='NSHTTPURLResponse*' index='0' name='response' type='@'/>
<arg declared_type='NSData*' index='1' name='data' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='AFHTTPSessionManager'>
<method selector='DELETE:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(NSURLSessionDataTask *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='GET:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(NSURLSessionDataTask *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='HEAD:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(NSURLSessionDataTask *)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='PATCH:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(NSURLSessionDataTask *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='POST:parameters:constructingBodyWithBlock:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='2' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, id)' function_pointer='true' index='3' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='4' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='POST:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(NSURLSessionDataTask *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='PUT:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(NSURLSessionDataTask *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='initWithBaseURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithBaseURL:sessionConfiguration:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='NSURLSessionConfiguration*' index='1' name='configuration' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='manager'>
<retval declared_type='id' type='@'/>
</method>
<method selector='requestSerializer'>
<retval declared_type='AFHTTPRequestSerializer*' type='@'/>
</method>
<method selector='responseSerializer'>
<retval declared_type='AFHTTPResponseSerializer*' type='@'/>
</method>
<method selector='setRequestSerializer:'>
<arg declared_type='AFHTTPRequestSerializer*' index='0' name='requestSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseSerializer:'>
<arg declared_type='AFHTTPResponseSerializer*' index='0' name='responseSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFImageResponseSerializer'>
<method selector='automaticallyInflatesResponseImage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='imageScale'>
<retval declared_type='CGFloat' type='f' type64='d'/>
</method>
<method selector='setAutomaticallyInflatesResponseImage:'>
<arg declared_type='BOOL' index='0' name='automaticallyInflatesResponseImage' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageScale:'>
<arg declared_type='CGFloat' index='0' name='imageScale' type='f' type64='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFJSONRequestSerializer'>
<method class_method='true' selector='serializerWithWritingOptions:'>
<arg declared_type='NSJSONWritingOptions' index='0' name='writingOptions' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setWritingOptions:'>
<arg declared_type='NSJSONWritingOptions' index='0' name='writingOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writingOptions'>
<retval declared_type='NSJSONWritingOptions' type='I' type64='Q'/>
</method>
</class>
<class name='AFJSONResponseSerializer'>
<method selector='readingOptions'>
<retval declared_type='NSJSONReadingOptions' type='I' type64='Q'/>
</method>
<method selector='removesKeysWithNullValues'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='serializerWithReadingOptions:'>
<arg declared_type='NSJSONReadingOptions' index='0' name='readingOptions' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setReadingOptions:'>
<arg declared_type='NSJSONReadingOptions' index='0' name='readingOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRemovesKeysWithNullValues:'>
<arg declared_type='BOOL' index='0' name='removesKeysWithNullValues' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFNetworkActivityIndicatorManager'>
<method selector='decrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='incrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNetworkActivityIndicatorVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='AFNetworkReachabilityManager'>
<method selector='initWithReachability:'>
<arg declared_type='SCNetworkReachabilityRef' index='0' name='reachability' type='^{__SCNetworkReachability=}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isReachable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReachableViaWWAN'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReachableViaWiFi'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='localizedNetworkReachabilityStatusString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='managerForAddress:'>
<arg const='true' declared_type='void*' index='0' name='address' type='^v'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='managerForDomain:'>
<arg declared_type='NSString*' index='0' name='domain' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='networkReachabilityStatus'>
<retval declared_type='AFNetworkReachabilityStatus' type='i' type64='q'/>
</method>
<method selector='setReachabilityStatusChangeBlock:'>
<arg declared_type='void (^)(AFNetworkReachabilityStatus)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='AFNetworkReachabilityStatus' type='i' type64='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval declared_type='id' type='@'/>
</method>
<method selector='startMonitoring'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopMonitoring'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFPropertyListRequestSerializer'>
<method selector='format'>
<retval declared_type='NSPropertyListFormat' type='I' type64='Q'/>
</method>
<method class_method='true' selector='serializerWithFormat:writeOptions:'>
<arg declared_type='NSPropertyListFormat' index='0' name='format' type='I' type64='Q'/>
<arg declared_type='NSPropertyListWriteOptions' index='1' name='writeOptions' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setFormat:'>
<arg declared_type='NSPropertyListFormat' index='0' name='format' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWriteOptions:'>
<arg declared_type='NSPropertyListWriteOptions' index='0' name='writeOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeOptions'>
<retval declared_type='NSPropertyListWriteOptions' type='I' type64='Q'/>
</method>
</class>
<class name='AFPropertyListResponseSerializer'>
<method selector='format'>
<retval declared_type='NSPropertyListFormat' type='I' type64='Q'/>
</method>
<method selector='readOptions'>
<retval declared_type='NSPropertyListReadOptions' type='I' type64='Q'/>
</method>
<method class_method='true' selector='serializerWithFormat:readOptions:'>
<arg declared_type='NSPropertyListFormat' index='0' name='format' type='I' type64='Q'/>
<arg declared_type='NSPropertyListReadOptions' index='1' name='readOptions' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setFormat:'>
<arg declared_type='NSPropertyListFormat' index='0' name='format' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReadOptions:'>
<arg declared_type='NSPropertyListReadOptions' index='0' name='readOptions' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFSecurityPolicy'>
<method selector='SSLPinningMode'>
<retval declared_type='AFSSLPinningMode' type='I' type64='Q'/>
</method>
<method selector='allowInvalidCertificates'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='defaultPolicy'>
<retval declared_type='id' type='@'/>
</method>
<method selector='evaluateServerTrust:'>
<arg declared_type='SecTrustRef' index='0' name='serverTrust' type='^{__SecTrust=}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='evaluateServerTrust:forDomain:'>
<arg declared_type='SecTrustRef' index='0' name='serverTrust' type='^{__SecTrust=}'/>
<arg declared_type='NSString*' index='1' name='domain' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pinnedCertificates'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='policyWithPinningMode:'>
<arg declared_type='AFSSLPinningMode' index='0' name='pinningMode' type='I' type64='Q'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAllowInvalidCertificates:'>
<arg declared_type='BOOL' index='0' name='allowInvalidCertificates' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPinnedCertificates:'>
<arg declared_type='NSArray*' index='0' name='pinnedCertificates' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSSLPinningMode:'>
<arg declared_type='AFSSLPinningMode' index='0' name='SSLPinningMode' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValidatesCertificateChain:'>
<arg declared_type='BOOL' index='0' name='validatesCertificateChain' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValidatesDomainName:'>
<arg declared_type='BOOL' index='0' name='validatesDomainName' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='validatesCertificateChain'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='validatesDomainName'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='AFURLConnectionOperation'>
<method class_method='true' selector='batchOfRequestOperations:progressBlock:completionBlock:'>
<arg declared_type='NSArray*' index='0' name='operations' type='@'/>
<arg declared_type='void (^)(NSUInteger, NSUInteger)' function_pointer='true' index='1' name='progressBlock' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSArray *)' function_pointer='true' index='2' name='completionBlock' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='completionGroup'>
<retval declared_type='dispatch_group_t' type='@'/>
</method>
<method selector='completionQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='credential'>
<retval declared_type='NSURLCredential*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithRequest:'>
<arg declared_type='NSURLRequest*' index='0' name='urlRequest' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inputStream'>
<retval declared_type='NSInputStream*' type='@'/>
</method>
<method selector='isPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outputStream'>
<retval declared_type='NSOutputStream*' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='response'>
<retval declared_type='NSURLResponse*' type='@'/>
</method>
<method selector='responseData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='responseString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='responseStringEncoding'>
<retval declared_type='NSStringEncoding' type='I' type64='Q'/>
</method>
<method selector='resume'>
<retval declared_type='void' type='v'/>
</method>
<method selector='runLoopModes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='securityPolicy'>
<retval declared_type='AFSecurityPolicy*' type='@'/>
</method>
<method selector='setCacheResponseBlock:'>
<arg declared_type='NSCachedURLResponse *(^)(NSURLConnection *, NSCachedURLResponse *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSCachedURLResponse*' type='@'/>
<retval declared_type='NSCachedURLResponse*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionGroup:'>
<arg declared_type='dispatch_group_t' index='0' name='completionGroup' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionQueue:'>
<arg declared_type='dispatch_queue_t' index='0' name='completionQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCredential:'>
<arg declared_type='NSURLCredential*' index='0' name='credential' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadProgressBlock:'>
<arg declared_type='void (^)(NSUInteger, long long, long long)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputStream:'>
<arg declared_type='NSInputStream*' index='0' name='inputStream' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutputStream:'>
<arg declared_type='NSOutputStream*' index='0' name='outputStream' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRedirectResponseBlock:'>
<arg declared_type='NSURLRequest *(^)(NSURLConnection *, NSURLRequest *, NSURLResponse *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRunLoopModes:'>
<arg declared_type='NSSet*' index='0' name='runLoopModes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSecurityPolicy:'>
<arg declared_type='AFSecurityPolicy*' index='0' name='securityPolicy' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldExecuteAsBackgroundTaskWithExpirationHandler:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='handler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldUseCredentialStorage:'>
<arg declared_type='BOOL' index='0' name='shouldUseCredentialStorage' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUploadProgressBlock:'>
<arg declared_type='void (^)(NSUInteger, long long, long long)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg declared_type='NSDictionary*' index='0' name='userInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillSendRequestForAuthenticationChallengeBlock:'>
<arg declared_type='void (^)(NSURLConnection *, NSURLAuthenticationChallenge *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLAuthenticationChallenge*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldUseCredentialStorage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='AFURLSessionManager'>
<method selector='attemptsToRecreateUploadTasksForBackgroundSessions'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='completionGroup'>
<retval declared_type='dispatch_group_t' type='@'/>
</method>
<method selector='completionQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='dataTaskWithRequest:completionHandler:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='void (^)(NSURLResponse *, id, NSError *)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='dataTasks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='downloadProgressForTask:'>
<arg declared_type='NSURLSessionDownloadTask*' index='0' name='downloadTask' type='@'/>
<retval declared_type='NSProgress*' type='@'/>
</method>
<method selector='downloadTaskWithRequest:progress:destination:completionHandler:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSProgress**' index='1' name='progress' type='^@'/>
<arg declared_type='NSURL *(^)(NSURL *, NSURLResponse *)' function_pointer='true' index='2' name='destination' type='@?'>
<arg declared_type='NSURL*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='NSURL*' type='@'/>
</arg>
<arg declared_type='void (^)(NSURLResponse *, NSURL *, NSError *)' function_pointer='true' index='3' name='completionHandler' type='@?'>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='NSURL*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDownloadTask*' type='@'/>
</method>
<method selector='downloadTaskWithResumeData:progress:destination:completionHandler:'>
<arg declared_type='NSData*' index='0' name='resumeData' type='@'/>
<arg declared_type='NSProgress**' index='1' name='progress' type='^@'/>
<arg declared_type='NSURL *(^)(NSURL *, NSURLResponse *)' function_pointer='true' index='2' name='destination' type='@?'>
<arg declared_type='NSURL*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='NSURL*' type='@'/>
</arg>
<arg declared_type='void (^)(NSURLResponse *, NSURL *, NSError *)' function_pointer='true' index='3' name='completionHandler' type='@?'>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='NSURL*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDownloadTask*' type='@'/>
</method>
<method selector='downloadTasks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithSessionConfiguration:'>
<arg declared_type='NSURLSessionConfiguration*' index='0' name='configuration' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='invalidateSessionCancelingTasks:'>
<arg declared_type='BOOL' index='0' name='cancelPendingTasks' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='reachabilityManager'>
<retval declared_type='AFNetworkReachabilityManager*' type='@'/>
</method>
<method selector='responseSerializer'>
<retval declared_type='id' type='@'/>
</method>
<method selector='securityPolicy'>
<retval declared_type='AFSecurityPolicy*' type='@'/>
</method>
<method selector='session'>
<retval declared_type='NSURLSession*' type='@'/>
</method>
<method selector='setAttemptsToRecreateUploadTasksForBackgroundSessions:'>
<arg declared_type='BOOL' index='0' name='attemptsToRecreateUploadTasksForBackgroundSessions' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionGroup:'>
<arg declared_type='dispatch_group_t' index='0' name='completionGroup' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionQueue:'>
<arg declared_type='dispatch_queue_t' index='0' name='completionQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataTaskDidBecomeDownloadTaskBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSURLSessionDataTask *, NSURLSessionDownloadTask *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSURLSessionDownloadTask*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataTaskDidReceiveDataBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSURLSessionDataTask *, NSData *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataTaskDidReceiveResponseBlock:'>
<arg declared_type='NSURLSessionResponseDisposition (^)(NSURLSession *, NSURLSessionDataTask *, NSURLResponse *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='NSURLSessionResponseDisposition' type='i' type64='q'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataTaskWillCacheResponseBlock:'>
<arg declared_type='NSCachedURLResponse *(^)(NSURLSession *, NSURLSessionDataTask *, NSCachedURLResponse *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSCachedURLResponse*' type='@'/>
<retval declared_type='NSCachedURLResponse*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidFinishEventsForBackgroundURLSessionBlock:'>
<arg declared_type='void (^)(NSURLSession *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadTaskDidFinishDownloadingBlock:'>
<arg declared_type='NSURL *(^)(NSURLSession *, NSURLSessionDownloadTask *, NSURL *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDownloadTask*' type='@'/>
<arg declared_type='NSURL*' type='@'/>
<retval declared_type='NSURL*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadTaskDidResumeBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSURLSessionDownloadTask *, int64_t, int64_t)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDownloadTask*' type='@'/>
<arg declared_type='int64_t' type='q'/>
<arg declared_type='int64_t' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadTaskDidWriteDataBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSURLSessionDownloadTask *, int64_t, int64_t, int64_t)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDownloadTask*' type='@'/>
<arg declared_type='int64_t' type='q'/>
<arg declared_type='int64_t' type='q'/>
<arg declared_type='int64_t' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReachabilityManager:'>
<arg declared_type='AFNetworkReachabilityManager*' index='0' name='reachabilityManager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseSerializer:'>
<arg declared_type='id' index='0' name='responseSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSecurityPolicy:'>
<arg declared_type='AFSecurityPolicy*' index='0' name='securityPolicy' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSessionDidBecomeInvalidBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSError *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSessionDidReceiveAuthenticationChallengeBlock:'>
<arg declared_type='NSURLSessionAuthChallengeDisposition (^)(NSURLSession *, NSURLAuthenticationChallenge *, NSURLCredential **)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLAuthenticationChallenge*' type='@'/>
<arg declared_type='NSURLCredential**' type='^@'/>
<retval declared_type='NSURLSessionAuthChallengeDisposition' type='i' type64='q'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTaskDidCompleteBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSURLSessionTask *, NSError *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTaskDidReceiveAuthenticationChallengeBlock:'>
<arg declared_type='NSURLSessionAuthChallengeDisposition (^)(NSURLSession *, NSURLSessionTask *, NSURLAuthenticationChallenge *, NSURLCredential **)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionTask*' type='@'/>
<arg declared_type='NSURLAuthenticationChallenge*' type='@'/>
<arg declared_type='NSURLCredential**' type='^@'/>
<retval declared_type='NSURLSessionAuthChallengeDisposition' type='i' type64='q'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTaskDidSendBodyDataBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSURLSessionTask *, int64_t, int64_t, int64_t)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionTask*' type='@'/>
<arg declared_type='int64_t' type='q'/>
<arg declared_type='int64_t' type='q'/>
<arg declared_type='int64_t' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTaskNeedNewBodyStreamBlock:'>
<arg declared_type='NSInputStream *(^)(NSURLSession *, NSURLSessionTask *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionTask*' type='@'/>
<retval declared_type='NSInputStream*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTaskWillPerformHTTPRedirectionBlock:'>
<arg declared_type='NSURLRequest *(^)(NSURLSession *, NSURLSessionTask *, NSURLResponse *, NSURLRequest *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionTask*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='NSURLRequest*' type='@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='tasks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='uploadProgressForTask:'>
<arg declared_type='NSURLSessionUploadTask*' index='0' name='uploadTask' type='@'/>
<retval declared_type='NSProgress*' type='@'/>
</method>
<method selector='uploadTaskWithRequest:fromData:progress:completionHandler:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSData*' index='1' name='bodyData' type='@'/>
<arg declared_type='NSProgress**' index='2' name='progress' type='^@'/>
<arg declared_type='void (^)(NSURLResponse *, id, NSError *)' function_pointer='true' index='3' name='completionHandler' type='@?'>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionUploadTask*' type='@'/>
</method>
<method selector='uploadTaskWithRequest:fromFile:progress:completionHandler:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSURL*' index='1' name='fileURL' type='@'/>
<arg declared_type='NSProgress**' index='2' name='progress' type='^@'/>
<arg declared_type='void (^)(NSURLResponse *, id, NSError *)' function_pointer='true' index='3' name='completionHandler' type='@?'>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionUploadTask*' type='@'/>
</method>
<method selector='uploadTaskWithStreamedRequest:progress:completionHandler:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSProgress**' index='1' name='progress' type='^@'/>
<arg declared_type='void (^)(NSURLResponse *, id, NSError *)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionUploadTask*' type='@'/>
</method>
<method selector='uploadTasks'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='FMDatabase'>
<method class_method='true' selector='FMDBUserVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='FMDBVersion'>
<retval declared_type='SInt32' type='l' type64='i'/>
</method>
<method selector='beginDeferredTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='beginTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='boolForQuery:' variadic='true'>
<arg declared_type='NSString*' index='0' name='query' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cachedStatements'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='changes'>
<retval declared_type='int' type='i'/>
</method>
<method selector='checkedOut'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clearCachedStatements'>
<retval declared_type='void' type='v'/>
</method>
<method selector='close'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='closeOpenResultSets'>
<retval declared_type='void' type='v'/>
</method>
<method selector='columnExists:columnName:'>
<arg declared_type='NSString*' index='0' name='tableName' type='@'/>
<arg declared_type='NSString*' index='1' name='columnName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='columnExists:inTableWithName:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<arg declared_type='NSString*' index='1' name='tableName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='commit'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='crashOnErrors'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dataForQuery:' variadic='true'>
<arg declared_type='NSString*' index='0' name='query' type='@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='databasePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='databaseWithPath:'>
<arg declared_type='NSString*' index='0' name='inPath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='dateForQuery:' variadic='true'>
<arg declared_type='NSString*' index='0' name='query' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateFromString:'>
<arg declared_type='NSString*' index='0' name='s' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='doubleForQuery:' variadic='true'>
<arg declared_type='NSString*' index='0' name='query' type='@'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='executeQuery:' variadic='true'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<retval declared_type='FMResultSet*' type='@'/>
</method>
<method selector='executeQuery:withArgumentsInArray:'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<arg declared_type='NSArray*' index='1' name='arguments' type='@'/>
<retval declared_type='FMResultSet*' type='@'/>
</method>
<method selector='executeQuery:withParameterDictionary:'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='arguments' type='@'/>
<retval declared_type='FMResultSet*' type='@'/>
</method>
<method selector='executeQuery:withVAList:'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<arg declared_type='va_list' declared_type64='__va_list_tag*' index='1' name='args' type='*' type64='^{__va_list_tag=II^v^v}'/>
<retval declared_type='FMResultSet*' type='@'/>
</method>
<method selector='executeQueryWithFormat:' variadic='true'>
<arg declared_type='NSString*' index='0' name='format' printf_format='true' type='@'/>
<retval declared_type='FMResultSet*' type='@'/>
</method>
<method selector='executeStatements:'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='executeStatements:withResultBlock:'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<arg declared_type='FMDBExecuteStatementsCallbackBlock' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='NSDictionary*' type='@'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='executeUpdate:' variadic='true'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='executeUpdate:withArgumentsInArray:'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<arg declared_type='NSArray*' index='1' name='arguments' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='executeUpdate:withErrorAndBindings:' variadic='true'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<arg declared_type='NSError**' index='1' name='outErr' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='executeUpdate:withParameterDictionary:'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='arguments' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='executeUpdate:withVAList:'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<arg declared_type='va_list' declared_type64='__va_list_tag*' index='1' name='args' type='*' type64='^{__va_list_tag=II^v^v}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='executeUpdateWithFormat:' variadic='true'>
<arg declared_type='NSString*' index='0' name='format' printf_format='true' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getSchema'>
<retval declared_type='FMResultSet*' type='@'/>
</method>
<method selector='getTableSchema:'>
<arg declared_type='NSString*' index='0' name='tableName' type='@'/>
<retval declared_type='FMResultSet*' type='@'/>
</method>
<method selector='goodConnection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hadError'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasDateFormatter'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hasOpenResultSets'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inSavePoint:'>
<arg declared_type='void (^)(BOOL *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='BOOL*' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='inTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithPath:'>
<arg declared_type='NSString*' index='0' name='inPath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='intForQuery:' variadic='true'>
<arg declared_type='NSString*' index='0' name='query' type='@'/>
<retval declared_type='int' type='i'/>
</method>
<method class_method='true' selector='isSQLiteThreadSafe'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lastError'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='lastErrorCode'>
<retval declared_type='int' type='i'/>
</method>
<method selector='lastErrorMessage'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='lastInsertRowId'>
<retval declared_type='sqlite_int64' type='q'/>
</method>
<method selector='logsErrors'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='longForQuery:' variadic='true'>
<arg declared_type='NSString*' index='0' name='query' type='@'/>
<retval declared_type='long' type='l' type64='q'/>
</method>
<method selector='makeFunctionNamed:maximumArguments:withBlock:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='int' index='1' name='count' type='i'/>
<arg declared_type='void (^)(sqlite3_context *, int, sqlite3_value **)' function_pointer='true' index='2' name='block' type='@?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_value**' type='^^{Mem}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='maxBusyRetryTimeInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='open'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='openWithFlags:'>
<arg declared_type='int' index='0' name='flags' type='i'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rekey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rekeyWithData:'>
<arg declared_type='NSData*' index='0' name='keyData' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='releaseSavePointWithName:error:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='NSError**' index='1' name='outErr' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rollback'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rollbackToSavePointWithName:error:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='NSError**' index='1' name='outErr' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setCachedStatements:'>
<arg declared_type='NSMutableDictionary*' index='0' name='cachedStatements' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCheckedOut:'>
<arg declared_type='BOOL' index='0' name='checkedOut' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCrashOnErrors:'>
<arg declared_type='BOOL' index='0' name='crashOnErrors' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDateFormat:'>
<arg declared_type='NSDateFormatter*' index='0' name='format' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setKeyWithData:'>
<arg declared_type='NSData*' index='0' name='keyData' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setLogsErrors:'>
<arg declared_type='BOOL' index='0' name='logsErrors' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxBusyRetryTimeInterval:'>
<arg declared_type='NSTimeInterval' index='0' name='timeoutInSeconds' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldCacheStatements:'>
<arg declared_type='BOOL' index='0' name='value' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTraceExecution:'>
<arg declared_type='BOOL' index='0' name='traceExecution' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserVersion:'>
<arg declared_type='uint32_t' index='0' name='version' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldCacheStatements'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sqliteHandle'>
<retval declared_type='sqlite3*' type='^{sqlite3=}'/>
</method>
<method class_method='true' selector='sqliteLibVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='startSavePointWithName:error:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<arg declared_type='NSError**' index='1' name='outErr' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='storeableDateFormat:'>
<arg declared_type='NSString*' index='0' name='format' type='@'/>
<retval declared_type='NSDateFormatter*' type='@'/>
</method>
<method selector='stringForQuery:' variadic='true'>
<arg declared_type='NSString*' index='0' name='query' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringFromDate:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='tableExists:'>
<arg declared_type='NSString*' index='0' name='tableName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='traceExecution'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='update:withErrorAndBindings:' variadic='true'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<arg declared_type='NSError**' index='1' name='outErr' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='userVersion'>
<retval declared_type='uint32_t' type='I'/>
</method>
<method selector='validateSQL:error:'>
<arg declared_type='NSString*' index='0' name='sql' type='@'/>
<arg declared_type='NSError**' index='1' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='FMDatabasePool'>
<method selector='countOfCheckedInDatabases'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='countOfCheckedOutDatabases'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='countOfOpenDatabases'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method class_method='true' selector='databasePoolWithPath:'>
<arg declared_type='NSString*' index='0' name='aPath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='databasePoolWithPath:flags:'>
<arg declared_type='NSString*' index='0' name='aPath' type='@'/>
<arg declared_type='int' index='1' name='openFlags' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='inDatabase:'>
<arg declared_type='void (^)(FMDatabase *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='FMDatabase*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='inDeferredTransaction:'>
<arg declared_type='void (^)(FMDatabase *, BOOL *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='FMDatabase*' type='@'/>
<arg declared_type='BOOL*' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='inSavePoint:'>
<arg declared_type='void (^)(FMDatabase *, BOOL *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='FMDatabase*' type='@'/>
<arg declared_type='BOOL*' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='inTransaction:'>
<arg declared_type='void (^)(FMDatabase *, BOOL *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='FMDatabase*' type='@'/>
<arg declared_type='BOOL*' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithPath:'>
<arg declared_type='NSString*' index='0' name='aPath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPath:flags:'>
<arg declared_type='NSString*' index='0' name='aPath' type='@'/>
<arg declared_type='int' index='1' name='openFlags' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='maximumNumberOfDatabasesToCreate'>
<retval declared_type='NSUInteger' type='I' type64='Q'/>
</method>
<method selector='openFlags'>
<retval declared_type='int' type='i'/>
</method>
<method selector='path'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='releaseAllDatabases'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumNumberOfDatabasesToCreate:'>
<arg declared_type='NSUInteger' index='0' name='maximumNumberOfDatabasesToCreate' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpenFlags:'>
<arg declared_type='int' index='0' name='openFlags' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPath:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='FMDatabaseQueue'>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='databaseClass'>
<retval declared_type='Class' type='#'/>
</method>
<method class_method='true' selector='databaseQueueWithPath:'>
<arg declared_type='NSString*' index='0' name='aPath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='databaseQueueWithPath:flags:'>
<arg declared_type='NSString*' index='0' name='aPath' type='@'/>
<arg declared_type='int' index='1' name='openFlags' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inDatabase:'>
<arg declared_type='void (^)(FMDatabase *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='FMDatabase*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='inDeferredTransaction:'>
<arg declared_type='void (^)(FMDatabase *, BOOL *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='FMDatabase*' type='@'/>
<arg declared_type='BOOL*' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='inSavePoint:'>
<arg declared_type='void (^)(FMDatabase *, BOOL *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='FMDatabase*' type='@'/>
<arg declared_type='BOOL*' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='inTransaction:'>
<arg declared_type='void (^)(FMDatabase *, BOOL *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='FMDatabase*' type='@'/>
<arg declared_type='BOOL*' type='^B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithPath:'>
<arg declared_type='NSString*' index='0' name='aPath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithPath:flags:'>
<arg declared_type='NSString*' index='0' name='aPath' type='@'/>
<arg declared_type='int' index='1' name='openFlags' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='openFlags'>
<retval declared_type='int' type='i'/>
</method>
<method selector='path'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setOpenFlags:'>
<arg declared_type='int' index='0' name='openFlags' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPath:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='FMResultSet'>
<method selector='UTF8StringForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval const='true' declared_type='unsigned char*' type='*'/>
</method>
<method selector='UTF8StringForColumnName:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval const='true' declared_type='unsigned char*' type='*'/>
</method>
<method selector='boolForColumn:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='boolForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method selector='columnCount'>
<retval declared_type='int' type='i'/>
</method>
<method selector='columnIndexForName:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='columnIndexIsNull:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='columnIsNull:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='columnNameForIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='columnNameToIndexMap'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='dataForColumn:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='dataForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='dataNoCopyForColumn:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='dataNoCopyForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='dateForColumn:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='doubleForColumn:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='doubleForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='hasAnotherRow'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='intForColumn:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='intForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='kvcMagic:'>
<arg declared_type='id' index='0' name='object' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='longForColumn:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='long' type='l' type64='q'/>
</method>
<method selector='longForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='long' type='l' type64='q'/>
</method>
<method selector='longLongIntForColumn:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='long long' type='q'/>
</method>
<method selector='longLongIntForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='long long' type='q'/>
</method>
<method selector='next'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='objectAtIndexedSubscript:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectForColumnName:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='objectForKeyedSubscript:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='query'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='resultDict'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='resultDictionary'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method class_method='true' selector='resultSetWithStatement:usingParentDatabase:'>
<arg declared_type='FMStatement*' index='0' name='statement' type='@'/>
<arg declared_type='FMDatabase*' index='1' name='aDB' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setParentDB:'>
<arg declared_type='FMDatabase*' index='0' name='newDb' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQuery:'>
<arg declared_type='NSString*' index='0' name='query' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStatement:'>
<arg declared_type='FMStatement*' index='0' name='statement' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='statement'>
<retval declared_type='FMStatement*' type='@'/>
</method>
<method selector='stringForColumn:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stringForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='unsignedLongLongIntForColumn:'>
<arg declared_type='NSString*' index='0' name='columnName' type='@'/>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='unsignedLongLongIntForColumnIndex:'>
<arg declared_type='int' index='0' name='columnIdx' type='i'/>
<retval declared_type='unsigned long long' type='Q'/>
</method>
</class>
<class name='FMStatement'>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method selector='inUse'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='query'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInUse:'>
<arg declared_type='BOOL' index='0' name='inUse' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQuery:'>
<arg declared_type='NSString*' index='0' name='query' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStatement:'>
<arg declared_type='sqlite3_stmt*' index='0' name='statement' type='^{sqlite3_stmt=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUseCount:'>
<arg declared_type='long' index='0' name='useCount' type='l' type64='q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='statement'>
<retval declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
</method>
<method selector='useCount'>
<retval declared_type='long' type='l' type64='q'/>
</method>
</class>
<class name='NSObject'>
<method selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='NSString*' index='3' name='mimeType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithFileURL:name:error:'>
<arg declared_type='NSURL*' index='0' name='fileURL' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFileURL:name:fileName:mimeType:error:'>
<arg declared_type='NSURL*' index='0' name='fileURL' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='NSString*' index='3' name='mimeType' type='@'/>
<arg declared_type='NSError**' index='4' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFormData:name:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithHeaders:body:'>
<arg declared_type='NSDictionary*' index='0' name='headers' type='@'/>
<arg declared_type='NSData*' index='1' name='body' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithInputStream:name:fileName:length:mimeType:'>
<arg declared_type='NSInputStream*' index='0' name='inputStream' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='int64_t' index='3' name='length' type='q'/>
<arg declared_type='NSString*' index='4' name='mimeType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cacheImage:forRequest:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSURLRequest*' index='1' name='request' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cachedImageForRequest:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='databasePool:didAddDatabase:'>
<arg declared_type='FMDatabasePool*' index='0' name='pool' type='@'/>
<arg declared_type='FMDatabase*' index='1' name='database' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='databasePool:shouldAddDatabaseToPool:'>
<arg declared_type='FMDatabasePool*' index='0' name='pool' type='@'/>
<arg declared_type='FMDatabase*' index='1' name='database' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='requestBySerializingRequest:withParameters:error:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='responseObjectForResponse:data:error:'>
<arg declared_type='NSURLResponse*' index='0' name='response' type='@'/>
<arg declared_type='NSData*' index='1' name='data' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:'>
<arg declared_type='NSUInteger' index='0' name='numberOfBytes' type='I' type64='Q'/>
<arg declared_type='NSTimeInterval' index='1' name='delay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIActivityIndicatorView'>
<method selector='setAnimatingWithStateOfOperation:'>
<arg declared_type='AFURLConnectionOperation*' index='0' name='operation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimatingWithStateOfTask:'>
<arg declared_type='NSURLSessionTask*' index='0' name='task' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIAlertView'>
<method class_method='true' selector='showAlertViewForRequestOperationWithErrorOnCompletion:delegate:'>
<arg declared_type='AFURLConnectionOperation*' index='0' name='operation' type='@'/>
<arg declared_type='id' index='1' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showAlertViewForRequestOperationWithErrorOnCompletion:delegate:cancelButtonTitle:otherButtonTitles:' sentinel='0' variadic='true'>
<arg declared_type='AFURLConnectionOperation*' index='0' name='operation' type='@'/>
<arg declared_type='id' index='1' name='delegate' type='@'/>
<arg declared_type='NSString*' index='2' name='cancelButtonTitle' type='@'/>
<arg declared_type='NSString*' index='3' name='otherButtonTitles' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showAlertViewForTaskWithErrorOnCompletion:delegate:'>
<arg declared_type='NSURLSessionTask*' index='0' name='task' type='@'/>
<arg declared_type='id' index='1' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showAlertViewForTaskWithErrorOnCompletion:delegate:cancelButtonTitle:otherButtonTitles:' sentinel='0' variadic='true'>
<arg declared_type='NSURLSessionTask*' index='0' name='task' type='@'/>
<arg declared_type='id' index='1' name='delegate' type='@'/>
<arg declared_type='NSString*' index='2' name='cancelButtonTitle' type='@'/>
<arg declared_type='NSString*' index='3' name='otherButtonTitles' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIButton'>
<method selector='cancelBackgroundImageRequestOperationForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelImageRequestOperationForState:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageResponseSerializer'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setBackgroundImageForState:withURL:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<arg declared_type='NSURL*' index='1' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageForState:withURL:placeholderImage:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<arg declared_type='NSURL*' index='1' name='url' type='@'/>
<arg declared_type='UIImage*' index='2' name='placeholderImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageForState:withURLRequest:placeholderImage:success:failure:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<arg declared_type='NSURLRequest*' index='1' name='urlRequest' type='@'/>
<arg declared_type='UIImage*' index='2' name='placeholderImage' type='@'/>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' function_pointer='true' index='3' name='success' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='4' name='failure' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageForState:withURL:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<arg declared_type='NSURL*' index='1' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageForState:withURL:placeholderImage:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<arg declared_type='NSURL*' index='1' name='url' type='@'/>
<arg declared_type='UIImage*' index='2' name='placeholderImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageForState:withURLRequest:placeholderImage:success:failure:'>
<arg declared_type='UIControlState' index='0' name='state' type='I' type64='Q'/>
<arg declared_type='NSURLRequest*' index='1' name='urlRequest' type='@'/>
<arg declared_type='UIImage*' index='2' name='placeholderImage' type='@'/>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' function_pointer='true' index='3' name='success' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='4' name='failure' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageResponseSerializer:'>
<arg declared_type='id' index='0' name='imageResponseSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setSharedImageCache:'>
<arg declared_type='id' index='0' name='imageCache' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedImageCache'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIImageView'>
<method selector='cancelImageRequestOperation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageResponseSerializer'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setImageResponseSerializer:'>
<arg declared_type='id' index='0' name='imageResponseSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholderImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURLRequest:placeholderImage:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' name='urlRequest' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholderImage' type='@'/>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setSharedImageCache:'>
<arg declared_type='id' index='0' name='imageCache' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedImageCache'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIProgressView'>
<method selector='setProgressWithDownloadProgressOfOperation:animated:'>
<arg declared_type='AFURLConnectionOperation*' index='0' name='operation' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressWithDownloadProgressOfTask:animated:'>
<arg declared_type='NSURLSessionDownloadTask*' index='0' name='task' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressWithUploadProgressOfOperation:animated:'>
<arg declared_type='AFURLConnectionOperation*' index='0' name='operation' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressWithUploadProgressOfTask:animated:'>
<arg declared_type='NSURLSessionUploadTask*' index='0' name='task' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIRefreshControl'>
<method selector='setRefreshingWithStateOfOperation:'>
<arg declared_type='AFURLConnectionOperation*' index='0' name='operation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRefreshingWithStateOfTask:'>
<arg declared_type='NSURLSessionTask*' index='0' name='task' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIWebView'>
<method selector='loadRequest:MIMEType:textEncodingName:progress:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSString*' index='1' name='MIMEType' type='@'/>
<arg declared_type='NSString*' index='2' name='textEncodingName' type='@'/>
<arg declared_type='void (^)(NSUInteger, long long, long long)' function_pointer='true' index='3' name='progress' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSData *(^)(NSHTTPURLResponse *, NSData *)' function_pointer='true' index='4' name='success' type='@?'>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSData*' type='@'/>
<retval declared_type='NSData*' type='@'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='5' name='failure' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadRequest:progress:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='void (^)(NSUInteger, long long, long long)' function_pointer='true' index='1' name='progress' type='@?'>
<arg declared_type='NSUInteger' type='I' type64='Q'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSString *(^)(NSHTTPURLResponse *, NSString *)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestSerializer'>
<retval declared_type='AFHTTPRequestSerializer*' type='@'/>
</method>
<method selector='responseSerializer'>
<retval declared_type='AFHTTPResponseSerializer*' type='@'/>
</method>
<method selector='setRequestSerializer:'>
<arg declared_type='AFHTTPRequestSerializer*' index='0' name='requestSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseSerializer:'>
<arg declared_type='AFHTTPResponseSerializer*' index='0' name='responseSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<informal_protocol name='AFImageCache'>
<method selector='cacheImage:forRequest:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSURLRequest*' index='1' name='request' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cachedImageForRequest:' type='@12@0:4@8' type64='@24@0:8@16'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='AFMultipartFormData'>
<method selector='appendPartWithFileData:name:fileName:mimeType:' type='v24@0:4@8@12@16@20' type64='v48@0:8@16@24@32@40'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='NSString*' index='3' name='mimeType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithFileURL:name:error:' type='B20@0:4@8@12^@16' type64='B40@0:8@16@24^@32'>
<arg declared_type='NSURL*' index='0' name='fileURL' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFileURL:name:fileName:mimeType:error:' type='B28@0:4@8@12@16@20^@24' type64='B56@0:8@16@24@32@40^@48'>
<arg declared_type='NSURL*' index='0' name='fileURL' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='NSString*' index='3' name='mimeType' type='@'/>
<arg declared_type='NSError**' index='4' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFormData:name:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithHeaders:body:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='NSDictionary*' index='0' name='headers' type='@'/>
<arg declared_type='NSData*' index='1' name='body' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithInputStream:name:fileName:length:mimeType:' type='v32@0:4@8@12@16q20@28' type64='v56@0:8@16@24@32q40@48'>
<arg declared_type='NSInputStream*' index='0' name='inputStream' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='int64_t' index='3' name='length' type='q'/>
<arg declared_type='NSString*' index='4' name='mimeType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:' type='v20@0:4I8d12' type64='v32@0:8Q16d24'>
<arg declared_type='NSUInteger' index='0' name='numberOfBytes' type='I' type64='Q'/>
<arg declared_type='NSTimeInterval' index='1' name='delay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='AFURLRequestSerialization'>
<method selector='requestBySerializingRequest:withParameters:error:' type='@20@0:4@8@12^@16' type64='@40@0:8@16@24^@32'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='AFURLResponseSerialization'>
<method selector='responseObjectForResponse:data:error:' type='@20@0:4@8@12^@16' type64='@40@0:8@16@24^@32'>
<arg declared_type='NSURLResponse*' index='0' name='response' type='@'/>
<arg declared_type='NSData*' index='1' name='data' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='FMDatabasePoolDelegate'>
<method selector='databasePool:didAddDatabase:' type='v16@0:4@8@12' type64='v32@0:8@16@24'>
<arg declared_type='FMDatabasePool*' index='0' name='pool' type='@'/>
<arg declared_type='FMDatabase*' index='1' name='database' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='databasePool:shouldAddDatabaseToPool:' type='B16@0:4@8@12' type64='B32@0:8@16@24'>
<arg declared_type='FMDatabasePool*' index='0' name='pool' type='@'/>
<arg declared_type='FMDatabase*' index='1' name='database' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
</signatures>
